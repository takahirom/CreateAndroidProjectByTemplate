import groovy.text.SimpleTemplateEngine
apply from:"app.config.gradle"

def templateDirName = 'template'
def outputDirName = 'output'

task createProject << {

    def engine = new SimpleTemplateEngine()
    def canParseInputFiles = fileTree(templateDirName)
    def cantParseInputFiles = fileTree(templateDirName)

    fileTree(templateDirName).each{
        fileName->
        try{
            engine.createTemplate(fileName)
            // can parse
            cantParseInputFiles -= fileTree(fileName)
            println "include:" + fileName
        }catch (e){
            // cant parse
            canParseInputFiles -= fileTree(fileName)
            println "exclude:" + fileName
        }
    }

    // copy bin files etc..
    copy {
        from (templateDirName)
        into outputDirName

        exclude appprop.templateJavaSourcePath
        canParseInputFiles.each{
            def tempRelativePath = file(templateDirName).toURI().relativize(it.toURI())
            exclude tempRelativePath.toString()
        }

    }
    // copy Manifest.xml ,strings.xml etc..
    copy {
        from (templateDirName)
        into outputDirName

        exclude appprop.templateJavaSourcePath
        cantParseInputFiles.each{
            def tempRelativePath = file(templateDirName).toURI().relativize(it.toURI())
            exclude tempRelativePath.toString()
        }

        expand appprop;
    }
    // Java source copy
    copy {
        from (templateDirName + '/' + appprop.templateJavaSourcePath)
        into outputDirName + '/' + appprop.templateJavaSourcePath + "/" + appprop.packageName.split('\\.').toList().join('/')

        expand appprop;
    }
}
