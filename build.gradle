import groovy.text.SimpleTemplateEngine
def engine = new SimpleTemplateEngine()
def canParseInputFiles = fileTree('template')
def cantParseInputFiles = fileTree('template')

fileTree('template').each{
	fileName->
	try{
		engine.createTemplate(fileName)
		// can parse
		cantParseInputFiles -= fileTree(fileName)
		println "include:" + fileName
	}catch (e){
		// cant parse
		canParseInputFiles -= fileTree(fileName)
		println "exclude:" + fileName
	}
}

copy {
	from ('template')
	exclude project.properties.templateJavaSourcePath
	canParseInputFiles.each{
		def tempRelativePath = file('template').toURI().relativize(it.toURI())
		exclude tempRelativePath.toString()
	}

	into 'output'
}
copy {
	from ('template')
	exclude project.properties.templateJavaSourcePath
	cantParseInputFiles.each{
		def tempRelativePath = file('template').toURI().relativize(it.toURI())
		exclude tempRelativePath.toString()
	}

	expand project.properties;
	into 'output'
}